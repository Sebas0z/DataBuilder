/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "jacoco"

sonarqube {
    properties {
    	property "sonar.projectKey", "DataBuilder"
    	property "sonar.projectName", "DataBuilder"
    	property "sonar.projectVersion", "0.1.0"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.source", "1.8"
        property "sonar.java.target", "1.8"
        property "sonar.sources", "src/main/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.tests", "src/test/java"
		property "sonar.java.test.binaries", "build/classes/java/test"
		property "sonar.jacoco.reportPaths", "build/jacoco/jacocoTest.exec"
		property "sonar.junit.reportsPaths", "build/test-results"
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

test {
	jacoco {
		append = false // Si se establece en verdadero y ya existe el archivo de
						// datos de la ejecución, los datos de cobertura se anexan al
						// archivo existente
		destinationFile = file("build/jacoco/jacocoTest.exec")
	}
}
